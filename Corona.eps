%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 14 298 580 678 
%%LanguageLevel: 3
%%Creator: CorelDRAW
%%Title: Corona.eps
%%CreationDate: Sun Nov 04 01:36:05 2007
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 3 def
%Build: CorelDRAW Version 13.0.0.739
%Color profile: Désactivé
/CorelIsEPS true def
%%BeginResource: procset wCorel3Dict 3.0 0
/wCorel3Dict 300 dict def wCorel3Dict begin
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel3Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
190.76967 548.35200 436.84809 676.94400 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.40 0.80 0.00 null ] set_fill_color
2 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.21600 0.21600 0.00000 @w
312.98400 621.43200 m
302.83200 617.90400 293.47200 611.20800 282.67200 614.66400 C
278.49600 626.40000 287.42400 627.04800 287.42400 634.46400 C
284.54400 635.18400 L
276.19200 626.90400 264.38400 608.40000 251.49600 617.18400 C
252.36000 622.22400 L
254.52000 628.12800 L
254.16000 628.84800 L
243.43200 625.96800 229.46400 607.39200 228.09600 611.56800 C
228.02400 611.78400 221.68800 618.04800 210.67200 621.00000 C
202.39200 623.16000 197.35200 629.78400 204.62400 631.51200 C
214.12800 629.13600 231.04800 641.01600 237.88800 647.13600 C
243.43200 648.14400 252.86400 648.79200 257.11200 653.04000 C
260.20800 652.96800 278.28000 655.12800 285.91200 657.07200 C
290.88000 661.89600 298.65600 655.77600 304.92000 658.29600 C
301.10400 666.57600 308.80800 676.51200 313.92000 676.94400 C
325.65600 674.85600 323.71200 657.14400 322.12800 658.51200 C
329.54400 655.56000 344.88000 656.28000 353.08800 656.28000 C
362.44800 652.60800 370.65600 652.53600 379.44000 647.35200 C
390.38400 649.94400 405.64800 631.80000 417.74400 631.80000 C
423.50400 635.11200 431.20800 625.10400 419.32800 621.64800 C
411.98400 620.42400 407.80800 618.40800 402.26400 613.22400 C
395.06400 609.26400 381.31200 626.54400 372.16800 629.20800 C
373.53600 625.39200 377.35200 619.84800 375.19200 615.60000 C
355.53600 611.20800 359.06400 631.36800 339.55200 636.04800 C
336.74400 631.44000 353.66400 614.52000 342.79200 613.08000 C
338.54400 609.62400 320.40000 620.20800 312.98400 621.43200 C
@c
286.12800 601.70400 m
282.24000 610.99200 302.61600 605.95200 312.48000 616.46400 C
334.00800 605.08800 339.33600 605.73600 339.33600 603.72000 c
339.33600 600.91200 327.45600 597.96000 328.96800 589.53600 C
332.06400 585.14400 333.00000 585.28800 336.81600 587.66400 C
338.54400 590.83200 337.39200 592.84800 336.52800 596.08800 C
344.88000 601.84800 L
362.30400 601.84800 350.56800 593.49600 354.96000 586.87200 C
356.68800 586.87200 L
367.70400 588.52800 363.45600 595.44000 360.50400 600.84000 C
362.08800 605.23200 366.84000 611.85600 371.59200 612.36000 C
390.60000 603.21600 375.19200 599.97600 381.24000 588.67200 C
389.88000 590.11200 380.88000 617.54400 396.86400 598.75200 C
396.36000 596.30400 396.36000 595.15200 396.36000 592.41600 C
398.66400 591.33600 L
397.94400 594.64800 401.32800 611.42400 409.10400 614.44800 C
421.41600 614.44800 425.01600 621.72000 434.95200 623.73600 C
444.02400 609.48000 418.24800 594.43200 408.96000 588.52800 C
407.59200 577.08000 410.11200 558.93600 408.88800 548.35200 C
219.81600 548.71200 L
218.66400 560.95200 219.02400 577.58400 218.37600 588.38400 C
214.34400 596.88000 181.36800 604.80000 193.39200 622.94400 C
195.76800 623.01600 202.39200 616.75200 213.33600 614.30400 C
222.33600 612.21600 228.24000 604.58400 226.58400 602.42400 C
223.34400 593.42400 223.70400 588.60000 229.89600 592.12800 C
228.52800 599.90400 L
231.55200 602.78400 232.63200 603.57600 236.73600 605.37600 C
246.60000 597.88800 240.48000 590.76000 245.80800 588.67200 C
252.72000 596.52000 237.24000 604.00800 255.24000 612.07200 C
276.19200 600.91200 258.04800 597.24000 268.84800 587.30400 C
274.17600 588.88800 265.89600 610.05600 283.60800 600.69600 C
286.92000 597.96000 289.80000 594.28800 289.58400 589.75200 C
292.10400 587.23200 292.24800 587.30400 295.84800 587.30400 C
302.18400 595.15200 296.78400 600.26400 286.12800 601.70400 C
@c
313.77600 639.21600 m
311.32800 640.65600 311.61600 641.44800 310.68000 643.96800 C
313.05600 647.35200 L
314.06400 647.35200 L
316.94400 645.19200 L
315.79200 640.80000 L
313.77600 639.21600 L
@c
233.92800 561.52800 m
235.80000 561.52800 237.45600 559.87200 237.45600 557.92800 c
237.45600 555.98400 235.80000 554.40000 233.92800 554.40000 c
232.05600 554.40000 230.47200 555.98400 230.47200 557.92800 c
230.47200 559.87200 232.05600 561.52800 233.92800 561.52800 c
@c
273.81600 561.67200 m
275.68800 561.67200 277.34400 560.01600 277.34400 558.07200 c
277.34400 556.12800 275.68800 554.54400 273.81600 554.54400 c
271.94400 554.54400 270.36000 556.12800 270.36000 558.07200 c
270.36000 560.01600 271.94400 561.67200 273.81600 561.67200 c
@c
314.42400 561.67200 m
316.29600 561.67200 317.95200 560.01600 317.95200 558.07200 c
317.95200 556.12800 316.29600 554.54400 314.42400 554.54400 c
312.55200 554.54400 310.96800 556.12800 310.96800 558.07200 c
310.96800 560.01600 312.55200 561.67200 314.42400 561.67200 c
@c
353.88000 561.67200 m
355.75200 561.67200 357.40800 560.01600 357.40800 558.07200 c
357.40800 556.12800 355.75200 554.54400 353.88000 554.54400 c
352.00800 554.54400 350.42400 556.12800 350.42400 558.07200 c
350.42400 560.01600 352.00800 561.67200 353.88000 561.67200 c
@c
393.91200 561.67200 m
395.78400 561.67200 397.44000 560.01600 397.44000 558.07200 c
397.44000 556.12800 395.78400 554.54400 393.91200 554.54400 c
392.04000 554.54400 390.45600 556.12800 390.45600 558.07200 c
390.45600 560.01600 392.04000 561.67200 393.91200 561.67200 c
@c
B

@rax %Note: Object
174.76413 298.51200 442.15200 393.26400 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.40 0.80 0.00 null ] set_fill_color
2 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.21600 0.21600 0.00000 @w
250.84800 322.84800 m
254.01600 322.27200 L
255.74400 324.00000 258.19200 327.74400 259.05600 329.97600 C
253.00800 336.31200 L
251.49600 335.80800 250.20000 335.37600 248.61600 335.23200 C
239.97600 335.23200 240.33600 341.85600 242.71200 347.90400 C
246.88800 357.04800 255.52800 364.96800 265.75200 359.06400 C
268.92000 357.04800 272.44800 354.09600 274.96800 351.21600 C
275.97600 352.22400 277.48800 354.67200 278.49600 355.89600 C
283.32000 360.72000 292.60800 364.96800 298.44000 359.13600 C
298.87200 360.57600 L
303.55200 361.15200 L
303.55200 365.32800 L
309.09600 367.70400 312.84000 369.79200 317.59200 373.46400 C
323.20800 374.40000 326.30400 374.47200 329.25600 369.14400 C
330.48000 366.76800 L
330.48000 361.87200 L
333.72000 361.72800 336.09600 360.72000 338.11200 357.98400 C
339.04800 357.98400 343.44000 363.16800 343.80000 363.60000 C
353.08800 363.52800 L
354.81600 361.65600 356.76000 359.35200 358.84800 357.91200 C
364.24800 362.23200 368.71200 364.60800 375.76800 364.10400 C
386.35200 355.03200 L
390.60000 355.96800 394.77600 357.33600 398.52000 359.64000 C
400.39200 360.72000 402.40800 362.23200 404.20800 363.38400 C
413.20800 362.52000 423.14400 358.77600 431.49600 355.46400 C
433.80000 350.71200 L
433.80000 320.04000 L
436.17600 318.31200 439.27200 318.24000 442.15200 317.73600 C
441.14400 313.34400 440.56800 309.88800 437.76000 306.57600 C
435.02400 303.84000 431.64000 301.10400 428.76000 298.58400 C
425.01600 299.80800 421.34400 301.17600 418.24800 303.62400 C
415.44000 302.25600 413.13600 300.67200 410.54400 298.65600 C
404.35200 299.44800 L
397.87200 304.70400 389.66400 306.93600 382.10400 310.32000 C
381.67200 313.70400 380.52000 316.22400 383.11200 318.81600 C
383.32800 342.86400 L
382.96800 343.08000 L
376.56000 338.83200 371.66400 336.81600 363.96000 338.25600 C
364.24800 320.11200 L
367.63200 316.72800 366.26400 312.98400 365.18400 308.95200 C
360.72000 305.06400 357.62400 301.46400 352.15200 298.51200 C
346.89600 300.24000 343.94400 302.25600 339.84000 305.78400 C
338.04000 307.22400 336.52800 307.87200 335.52000 310.03200 C
330.55200 306.72000 324.93600 302.11200 318.96000 300.96000 C
313.84800 301.46400 308.16000 305.49600 304.63200 309.02400 C
301.03200 304.20000 294.26400 301.46400 288.28800 301.68000 C
281.16000 303.04800 275.83200 310.68000 271.65600 315.79200 C
268.70400 312.26400 265.89600 308.80800 263.37600 304.84800 C
258.76800 299.66400 252.93600 299.66400 246.88800 302.76000 C
244.44000 304.99200 L
243.28800 306.86400 L
241.77600 304.27200 240.40800 302.68800 238.03200 300.67200 C
225.21600 299.23200 212.61600 301.32000 199.87200 301.32000 C
193.46400 301.10400 186.62400 299.80800 180.21600 300.67200 C
172.29600 305.35200 176.97600 314.13600 182.66400 318.38400 C
181.87200 332.85600 180.86400 347.32800 181.44000 361.80000 C
181.87200 364.53600 L
175.60800 365.32800 173.95200 370.80000 175.10400 376.27200 C
177.55200 383.04000 185.04000 392.11200 192.45600 393.26400 C
196.77600 393.26400 201.52800 392.25600 205.84800 391.82400 C
218.37600 390.09600 230.97600 392.04000 243.21600 391.10400 C
244.72800 390.88800 L
250.56000 387.93600 L
245.59200 379.36800 241.70400 371.66400 232.34400 367.77600 C
225.72000 365.40000 218.59200 365.83200 211.60800 366.26400 C
211.68000 363.67200 L
218.08800 364.46400 224.92800 363.88800 231.48000 364.46400 C
236.30400 365.25600 L
240.12000 359.56800 241.70400 356.83200 239.68800 350.13600 C
236.95200 343.72800 234.64800 341.56800 228.24000 339.69600 C
224.13600 338.61600 217.94400 339.26400 213.55200 339.48000 C
213.55200 326.95200 L
220.10400 326.95200 226.80000 325.44000 233.35200 325.44000 C
235.44000 327.96000 237.60000 331.27200 239.68800 334.00800 C
244.51200 333.43200 248.61600 333.43200 250.84800 328.39200 C
252.00000 325.36800 L
250.84800 322.84800 L
@c
303.91200 324.93600 m
303.91200 344.23200 L
303.48000 344.23200 L
301.03200 346.03200 L
298.36800 341.85600 296.64000 340.20000 291.67200 341.64000 C
287.92800 337.03200 L
298.51200 325.15200 L
300.24000 325.58400 302.18400 325.22400 303.91200 324.93600 C
@c
336.45600 325.72800 m
336.16800 340.20000 L
334.72800 341.06400 332.56800 342.72000 332.06400 344.37600 C
330.76800 344.37600 L
330.76800 326.01600 L
332.35200 326.44800 334.87200 326.01600 336.45600 325.72800 C
@c
408.52800 323.13600 m
408.45600 341.20800 L
408.02400 341.35200 L
408.02400 323.28000 L
408.52800 323.13600 L
@c
B

@rax %Note: Object
179.65191 301.96800 436.03200 386.26356 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.40 0.40 0.00 0.60 null ] set_fill_color
2 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.21600 0.21600 0.00000 @w
201.74400 304.41600 m
191.59200 304.41600 182.95200 302.54400 181.58400 303.76800 C
179.49600 307.58400 184.39200 311.76000 187.84800 313.92000 C
187.56000 325.08000 183.31200 361.15200 189.28800 370.58400 C
185.97600 368.71200 184.39200 366.26400 180.86400 368.13600 C
175.75200 373.24800 188.20800 384.62400 191.37600 385.99200 C
194.47200 387.21600 205.56000 383.90400 219.02400 383.90400 c
230.18400 383.90400 242.64000 384.76800 243.50400 383.90400 C
233.92800 366.26400 225.28800 368.71200 206.28000 369.72000 C
206.92800 355.68000 L
217.44000 358.56000 224.78400 355.89600 233.92800 357.84000 C
237.24000 354.02400 235.08000 349.12800 232.34400 345.09600 C
230.54400 343.80000 226.94400 342.28800 225.36000 342.28800 c
219.38400 342.28800 214.77600 342.43200 208.51200 342.93600 C
208.51200 324.93600 L
206.28000 319.82400 L
216.07200 320.68800 228.09600 318.24000 234.79200 318.45600 C
237.60000 319.32000 239.47200 323.71200 241.92000 326.66400 C
244.87200 326.30400 245.66400 326.37600 246.52800 323.56800 C
243.50400 317.08800 238.32000 304.41600 235.94400 303.55200 C
224.56800 302.18400 213.40800 304.41600 201.74400 304.41600 c
@c
281.30400 310.10400 m
271.72800 321.76800 L
261.93600 310.03200 L
258.69600 305.28000 259.05600 303.76800 253.87200 303.76800 c
247.32000 303.76800 244.87200 310.89600 247.68000 316.22400 C
255.74400 314.92800 L
258.69600 317.08800 263.52000 324.72000 265.03200 329.11200 C
254.59200 339.98400 L
252.14400 339.62400 248.40000 337.53600 246.52800 338.61600 C
244.36800 340.99200 253.00800 357.26400 261.07200 353.80800 C
266.83200 351.57600 271.51200 345.38400 275.76000 340.99200 C
279.79200 347.18400 282.24000 353.23200 289.58400 354.81600 C
294.84000 355.89600 300.24000 350.28000 295.34400 344.52000 C
294.26400 343.44000 291.81600 345.38400 290.23200 345.88800 C
281.30400 334.94400 L
297.21600 317.08800 L
298.87200 318.81600 303.76800 319.32000 303.76800 315.50400 C
301.60800 312.55200 300.74400 308.80800 297.43200 307.08000 C
288.28800 302.83200 287.13600 304.63200 281.30400 310.10400 C
@c
318.74400 304.12800 m
314.92800 304.12800 307.00800 311.76000 307.00800 311.76000 C
307.00800 313.34400 308.30400 315.79200 308.95200 317.95200 C
308.95200 347.83200 L
304.92000 347.47200 L
301.60800 349.99200 301.10400 349.41600 302.68800 354.02400 C
308.59200 354.81600 L
308.59200 360.07200 L
312.69600 361.65600 316.29600 364.10400 319.68000 366.76800 C
323.85600 367.41600 323.49600 367.27200 325.44000 363.60000 C
325.44000 355.17600 L
331.70400 354.81600 L
334.72800 354.52800 337.10400 347.47200 332.28000 347.47200 c
325.72800 347.47200 L
325.72800 316.65600 L
330.62400 318.81600 330.84000 320.04000 336.60000 318.67200 C
337.46400 316.87200 337.68000 315.50400 336.60000 313.92000 C
330.98400 312.55200 322.99200 304.41600 318.74400 304.12800 C
@c
360.21600 342.21600 m
358.77600 341.13600 L
359.28000 316.00800 L
362.16000 313.27200 361.65600 313.70400 360.72000 309.81600 C
357.69600 307.22400 354.96000 303.40800 351.64800 302.04000 C
348.12000 302.68800 343.72800 307.58400 340.27200 309.81600 C
338.76000 312.76800 339.55200 312.48000 341.64000 315.28800 C
341.13600 341.20800 L
336.81600 343.94400 336.45600 343.15200 335.88000 348.33600 C
339.69600 350.92800 343.22400 353.01600 346.10400 356.61600 C
350.85600 356.54400 L
353.08800 353.95200 356.90400 350.64000 359.64000 349.99200 C
363.31200 353.30400 368.85600 357.76800 373.75200 357.26400 C
384.19200 348.33600 L
374.61600 341.20800 372.31200 339.19200 360.21600 342.21600 C
@c
406.44000 302.32800 m
400.96800 307.00800 393.40800 308.59200 386.71200 311.83200 C
386.06400 313.63200 387.72000 313.84800 388.15200 315.00000 C
388.36800 343.58400 L
385.41600 345.60000 L
386.71200 348.04800 L
398.16000 350.28000 402.19200 354.24000 405.50400 356.25600 C
409.24800 355.96800 421.12800 352.22400 427.82400 349.56000 C
428.76000 347.61600 L
428.76000 316.29600 L
430.48800 313.77600 432.79200 312.26400 436.03200 311.83200 C
436.03200 308.59200 430.12800 304.70400 427.60800 302.32800 C
424.08000 303.26400 421.63200 305.64000 418.68000 307.36800 C
413.56800 305.20800 412.92000 304.92000 409.10400 301.96800 C
406.44000 302.32800 L
@c
402.98400 317.73600 m
402.98400 345.74400 L
413.49600 343.29600 L
413.56800 314.20800 L
402.98400 317.73600 L
@c
B

@rax %Note: Object
14.93036 349.12800 579.81600 552.02400 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.40 0.80 0.00 null ] set_fill_color
2 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.21600 0.21600 0.00000 @w
165.24000 502.70400 m
166.68000 490.68000 L
173.88000 492.04800 180.28800 494.85600 186.62400 498.67200 C
192.38400 501.91200 197.78400 505.15200 204.55200 505.15200 C
212.76000 504.93600 218.73600 500.76000 225.64800 496.94400 C
230.76000 494.42400 236.23200 492.55200 241.77600 491.32800 C
247.24800 495.00000 253.29600 498.74400 257.68800 503.56800 C
259.70400 505.94400 L
271.72800 507.60000 L
274.96800 503.71200 278.49600 500.25600 282.31200 497.01600 C
288.64800 502.48800 294.62400 506.37600 303.04800 507.31200 C
306.57600 507.16800 L
325.08000 491.32800 L
336.74400 493.92000 345.81600 503.20800 357.62400 505.22400 C
363.67200 505.22400 367.63200 504.21600 373.03200 501.40800 C
376.99200 499.17600 381.45600 496.58400 385.63200 494.85600 C
387.79200 494.06400 392.54400 491.97600 394.70400 491.97600 C
397.22400 499.53600 405.50400 505.08000 411.12000 510.26400 C
414.07200 513.00000 L
422.49600 510.98400 429.40800 509.76000 433.44000 501.33600 C
433.87200 500.32800 L
440.64000 502.56000 447.33600 506.37600 452.01600 511.70400 C
455.18400 517.32000 L
483.12000 495.64800 L
484.05600 493.70400 485.20800 491.61600 485.85600 489.52800 C
488.95200 496.65600 L
497.37600 498.88800 504.72000 501.19200 512.13600 505.94400 C
515.52000 508.10400 519.12000 511.27200 522.36000 513.64800 C
527.25600 513.07200 532.22400 511.77600 536.76000 510.19200 C
546.19200 507.09600 555.55200 503.35200 564.55200 499.17600 C
567.28800 492.69600 L
567.28800 432.07200 L
570.88800 427.32000 573.84000 427.10400 579.81600 425.88000 C
579.09600 419.83200 578.59200 416.30400 574.92000 411.40800 C
570.74400 406.65600 566.06400 402.19200 561.60000 397.72800 C
558.36000 398.80800 555.33600 399.88800 552.52800 401.61600 C
551.80800 402.04800 544.96800 407.30400 544.89600 407.30400 C
540.72000 405.36000 537.33600 403.20000 534.24000 400.10400 C
531.28800 397.51200 L
522.93600 398.73600 L
516.31200 405.00000 509.54400 408.52800 501.19200 412.12800 C
496.94400 414.07200 492.48000 416.23200 488.37600 418.46400 C
483.69600 412.63200 480.02400 404.78400 473.61600 400.82400 C
470.73600 399.24000 L
464.90400 400.53600 460.22400 401.97600 455.61600 405.93600 C
451.80000 409.75200 447.98400 414.00000 444.38400 417.74400 C
447.62400 424.00800 L
447.62400 478.15200 L
444.45600 481.89600 L
442.80000 480.81600 440.92800 479.52000 439.27200 478.51200 C
439.27200 427.10400 L
445.46400 420.76800 L
441.14400 413.35200 436.68000 406.44000 429.91200 401.25600 C
425.44800 397.87200 L
420.33600 399.52800 417.24000 400.89600 412.84800 404.20800 C
409.03200 407.16000 405.14400 411.12000 401.83200 414.72000 C
400.75200 410.83200 L
390.16800 406.80000 380.52000 400.68000 370.22400 396.00000 C
364.32000 393.84000 361.08000 393.55200 355.03200 395.71200 C
343.58400 399.38400 332.06400 405.21600 321.04800 409.89600 C
315.57600 412.27200 L
315.79200 419.25600 316.00800 421.70400 320.83200 426.52800 C
321.84000 427.60800 L
322.63200 428.54400 L
322.70400 428.76000 L
323.35200 474.84000 L
321.33600 476.42400 319.96800 478.87200 318.88800 481.10400 C
312.62400 476.13600 306.00000 472.46400 297.79200 472.03200 C
294.04800 472.10400 290.37600 472.68000 286.77600 473.32800 C
286.84800 424.08000 L
291.81600 419.11200 289.87200 415.58400 288.50400 409.68000 C
283.75200 405.43200 279.07200 399.52800 273.38400 396.43200 C
268.63200 394.34400 264.60000 397.15200 260.71200 399.74400 C
256.75200 402.69600 252.86400 406.36800 248.76000 408.96000 C
248.04000 410.61600 246.67200 412.84800 246.52800 414.72000 C
245.44800 410.76000 L
234.86400 406.72800 225.21600 400.60800 214.92000 395.92800 C
209.01600 393.76800 205.77600 393.48000 199.72800 395.64000 C
188.28000 399.31200 176.76000 405.14400 165.74400 409.82400 C
165.45600 409.96800 L
165.45600 406.51200 L
169.20000 406.51200 173.30400 404.92800 176.83200 403.92000 C
174.81600 397.29600 174.16800 393.04800 168.76800 388.80000 C
167.47200 387.72000 L
167.76000 376.27200 168.33600 364.75200 162.00000 354.74400 C
158.54400 351.28800 156.45600 350.13600 151.63200 349.12800 C
142.48800 349.27200 135.21600 352.08000 132.91200 361.51200 C
132.98400 365.47200 134.06400 369.07200 135.21600 372.81600 C
135.36000 374.18400 L
132.04800 373.39200 128.23200 372.31200 124.84800 371.59200 C
105.40800 368.35200 87.33600 368.06400 68.11200 373.39200 C
56.30400 377.20800 46.72800 382.32000 37.36800 390.45600 C
32.32800 395.49600 28.15200 400.75200 24.40800 406.65600 C
21.88800 411.62400 19.72800 416.80800 17.92800 422.06400 C
14.32800 435.45600 14.25600 449.56800 16.20000 463.17600 C
17.92800 471.67200 20.30400 479.08800 24.04800 486.93600 C
31.82400 501.19200 42.84000 513.64800 55.58400 523.58400 C
67.46400 531.64800 81.36000 537.48000 95.54400 539.71200 C
99.14400 539.92800 102.96000 540.00000 106.56000 539.64000 C
115.12800 537.26400 L
110.80800 527.25600 L
95.83200 515.66400 80.92800 502.77600 73.15200 485.13600 C
65.88000 467.49600 67.53600 444.88800 79.63200 429.69600 C
83.73600 425.01600 88.27200 420.69600 92.66400 416.37600 C
93.02400 417.31200 93.38400 418.60800 93.60000 419.54400 C
93.38400 496.65600 L
89.13600 503.28000 L
93.60000 512.64000 L
96.69600 513.21600 100.00800 513.93600 103.03200 514.80000 C
115.70400 518.68800 125.71200 526.82400 135.43200 535.53600 C
141.55200 541.36800 147.96000 546.84000 154.65600 552.02400 C
160.99200 544.60800 166.68000 537.76800 175.03200 532.65600 C
181.36800 528.76800 188.92800 525.60000 195.76800 522.50400 C
190.58400 509.83200 L
182.44800 507.31200 174.45600 504.14400 165.96000 502.84800 C
165.24000 502.70400 L
@c
165.38400 438.55200 m
165.52800 426.45600 L
166.53600 427.53600 L
167.32800 428.47200 L
167.40000 428.68800 L
168.04800 474.76800 L
167.18400 475.41600 165.96000 476.85600 165.31200 477.93600 C
165.38400 438.55200 L
@c
247.17600 418.96800 m
247.96800 420.26400 L
248.83200 421.41600 L
249.69600 422.49600 L
249.69600 474.91200 L
248.18400 475.84800 246.60000 476.78400 245.23200 478.00800 C
245.23200 478.00800 243.36000 476.20800 243.14400 475.99200 C
243.14400 425.66400 L
245.30400 424.08000 247.17600 421.84800 247.17600 418.96800 C
@c
401.83200 421.99200 m
401.90400 423.14400 L
401.90400 479.08800 L
401.83200 479.23200 L
401.68800 479.52000 L
400.75200 478.29600 399.52800 477.14400 398.44800 476.06400 C
398.44800 425.73600 L
399.81600 424.72800 400.82400 423.57600 401.83200 421.99200 C
@c
485.78400 484.92000 m
485.35200 483.69600 L
484.05600 482.04000 L
482.90400 480.81600 L
482.90400 428.04000 L
484.99200 427.39200 486.00000 426.88800 487.44000 425.01600 C
487.44000 426.45600 489.02400 428.68800 489.96000 429.62400 C
490.32000 481.39200 L
485.78400 484.92000 L
@c
140.76000 402.19200 m
143.49600 402.48000 L
145.36800 402.84000 L
145.51200 506.52000 L
139.39200 509.40000 L
139.17600 422.06400 L
117.79200 403.77600 L
125.35200 402.19200 133.05600 401.32800 140.76000 402.19200 C
@c
209.23200 426.02400 m
209.08800 471.74400 L
201.31200 473.97600 L
201.24000 428.54400 L
209.23200 426.02400 L
@c
364.53600 426.09600 m
364.39200 471.81600 L
356.61600 474.04800 L
356.54400 428.61600 L
364.53600 426.09600 L
@c
532.00800 433.94400 m
531.93600 479.37600 L
524.59200 481.39200 L
524.52000 436.89600 L
532.00800 433.94400 L
@c
B

@rax %Note: Object
19.88277 350.20375 574.27200 541.22400 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.40 0.40 0.00 0.60 null ] set_fill_color
2 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.21600 0.21600 0.00000 @w
143.92800 351.28800 m
135.57600 355.68000 137.66400 359.71200 140.11200 367.77600 C
143.42400 369.14400 147.74400 369.21600 150.55200 370.80000 C
152.13600 381.96000 L
105.62400 359.92800 34.56000 365.90400 21.31200 425.01600 C
15.33600 464.68800 28.29600 490.24800 56.30400 513.86400 C
67.10400 522.79200 95.11200 534.74400 108.21600 530.06400 C
106.70400 526.53600 L
76.60800 503.78400 55.22400 477.50400 66.88800 439.20000 C
71.71200 423.43200 81.28800 416.95200 93.24000 404.92800 C
95.83200 406.29600 97.56000 410.11200 98.64000 415.08000 C
98.42400 494.28000 L
94.89600 499.75200 L
97.05600 504.28800 L
124.34400 508.96800 140.76000 531.72000 153.93600 541.22400 C
166.39200 526.32000 173.52000 523.22400 189.28800 516.02400 C
186.84000 510.04800 L
178.63200 507.31200 169.12800 503.56800 160.20000 503.56800 C
160.41600 397.36800 L
163.72800 398.01600 167.25600 397.58400 170.56800 396.64800 C
169.12800 390.88800 167.54400 390.38400 162.36000 386.20800 C
162.36000 375.69600 166.17600 343.94400 143.92800 351.28800 C
@c
107.06400 397.36800 m
134.13600 420.48000 L
134.35200 513.43200 L
150.55200 505.87200 L
150.40800 394.70400 L
133.12800 391.10400 123.12000 393.12000 107.06400 397.36800 C
@c
206.28000 395.13600 m
200.30400 395.78400 177.04800 406.65600 165.45600 411.55200 C
164.95200 417.24000 170.20800 418.53600 172.44000 423.43200 C
173.08800 473.11200 L
167.40000 477.57600 167.25600 481.82400 168.62400 482.04000 C
184.53600 484.63200 195.40800 496.94400 204.48000 496.22400 C
215.20800 496.44000 220.24800 486.43200 241.92000 482.25600 C
245.08800 478.22400 238.82400 476.64000 238.10400 473.32800 C
238.10400 419.40000 L
242.42400 415.87200 243.00000 416.30400 241.27200 410.68800 C
231.62400 407.37600 212.32800 394.20000 206.28000 395.13600 C
@c
196.20000 420.98400 m
196.27200 476.85600 L
214.12800 471.60000 L
214.27200 415.22400 L
196.20000 420.98400 L
@c
361.58400 395.20800 m
355.60800 395.85600 332.35200 406.72800 320.76000 411.62400 C
320.25600 417.31200 325.51200 418.60800 327.74400 423.50400 C
328.39200 473.18400 L
322.70400 477.64800 322.56000 481.89600 323.92800 482.11200 C
339.84000 484.70400 350.71200 497.01600 359.78400 496.29600 C
370.51200 496.51200 375.55200 486.50400 397.22400 482.32800 C
400.39200 478.29600 394.12800 476.71200 393.40800 473.40000 C
393.40800 419.47200 L
397.72800 415.94400 398.30400 416.37600 396.57600 410.76000 C
386.92800 407.44800 367.63200 394.27200 361.58400 395.20800 C
@c
351.50400 421.05600 m
351.57600 476.92800 L
369.43200 471.67200 L
369.57600 415.29600 L
351.50400 421.05600 L
@c
283.96800 475.27200 m
281.73600 473.68800 L
281.80800 418.03200 L
286.27200 413.85600 285.48000 414.50400 283.96800 408.52800 C
279.36000 404.56800 275.25600 398.80800 270.21600 396.64800 C
264.74400 397.65600 257.97600 405.14400 252.72000 408.52800 C
250.34400 413.06400 251.64000 412.63200 254.73600 416.95200 C
254.73600 473.83200 L
248.18400 478.00800 247.53600 476.78400 246.74400 484.70400 C
252.50400 488.66400 257.90400 491.83200 262.29600 497.30400 C
269.64000 498.31200 L
273.09600 494.35200 278.92800 488.23200 283.10400 487.15200 C
288.72000 492.26400 297.14400 499.10400 304.63200 498.31200 C
320.54400 484.70400 L
306.00000 473.76000 302.47200 470.66400 283.96800 475.27200 C
@c
525.24000 399.60000 m
516.16800 408.74400 503.71200 411.84000 492.55200 418.03200 C
491.54400 421.56000 494.28000 422.06400 495.00000 424.29600 C
495.36000 479.95200 L
490.46400 483.76800 L
492.55200 488.52000 L
511.48800 492.98400 518.18400 500.61600 523.72800 504.50400 C
529.84800 504.00000 549.57600 496.72800 560.66400 491.54400 C
562.24800 487.80000 L
562.24800 426.74400 L
565.05600 421.84800 568.87200 418.89600 574.27200 418.03200 C
574.27200 411.84000 564.48000 404.20800 560.23200 399.60000 C
554.47200 401.40000 550.44000 406.08000 545.54400 409.39200 C
537.04800 405.21600 535.96800 404.71200 529.70400 398.95200 C
525.24000 399.60000 L
@c
519.48000 429.55200 m
519.55200 484.12800 L
536.97600 479.30400 L
537.04800 422.71200 L
519.48000 429.55200 L
@c
406.58400 413.13600 m
406.94400 419.11200 L
406.94400 476.06400 L
405.72000 480.16800 402.76800 481.53600 399.24000 484.20000 C
398.73600 490.68000 411.19200 499.39200 415.51200 503.56800 C
425.52000 500.97600 427.46400 500.47200 430.41600 490.96800 C
438.84000 490.46400 454.24800 500.97600 456.69600 505.87200 C
479.08800 488.52000 L
482.04000 482.61600 482.04000 483.12000 477.86400 479.08800 C
477.86400 421.20000 L
479.80800 418.53600 483.12000 420.48000 483.84000 416.95200 C
479.08800 411.40800 475.77600 403.34400 470.01600 400.68000 C
459.50400 402.76800 457.92000 407.37600 450.50400 414.72000 C
452.66400 418.89600 L
452.66400 476.13600 L
445.32000 484.70400 L
441.57600 482.25600 437.97600 479.59200 434.23200 477.50400 C
434.23200 470.16000 L
434.23200 421.20000 L
439.20000 416.08800 L
435.52800 409.39200 430.77600 403.99200 424.51200 399.60000 C
417.45600 401.54400 411.69600 408.02400 406.58400 413.13600 C
@c
B

@rax %Note: Object
190.76967 548.35200 436.84809 676.94400 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.40 0.40 0.00 0.60 null ] set_fill_color
2 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.21600 0.21600 0.00000 @w
229.39200 552.60000 m
227.80800 553.82400 226.72800 555.76800 226.72800 557.92800 c
226.72800 560.23200 227.88000 562.46400 229.68000 563.68800 C
226.58400 563.68800 l
225.21600 563.68800 224.13600 562.82400 224.13600 561.88800 c
224.13600 554.47200 l
224.13600 553.53600 225.28800 552.60000 226.58400 552.60000 c
229.39200 552.60000 L
@c
310.03200 552.45600 m
308.30400 553.82400 307.22400 555.91200 307.22400 558.07200 c
307.22400 560.37600 308.80800 562.46400 310.60800 563.61600 C
278.06400 563.68800 L
280.00800 562.53600 281.16000 560.52000 281.16000 558.07200 c
281.16000 555.91200 280.08000 553.82400 278.20800 552.52800 C
310.03200 552.45600 L
@c
389.88000 552.60000 m
388.08000 553.82400 386.71200 555.91200 386.71200 558.07200 c
386.71200 560.37600 387.43200 562.46400 390.02400 563.61600 C
358.12800 563.68800 L
360.07200 562.53600 361.22400 560.52000 361.22400 558.07200 c
361.22400 555.91200 360.14400 553.82400 358.56000 552.60000 C
389.88000 552.60000 L
@c
398.44800 552.52800 m
400.17600 552.60000 l
400.17600 552.60000 402.62400 553.53600 402.62400 554.47200 c
402.62400 561.88800 l
402.62400 562.82400 400.17600 563.68800 400.17600 563.68800 C
397.94400 563.90400 L
399.96000 562.68000 401.25600 560.52000 401.25600 558.07200 c
401.25600 555.91200 400.17600 553.82400 398.44800 552.52800 C
@c
349.77600 552.45600 m
318.96000 552.52800 L
320.68800 553.82400 321.76800 555.91200 321.76800 558.07200 c
321.76800 560.52000 320.61600 562.53600 318.67200 563.68800 C
349.77600 563.61600 L
348.12000 562.46400 346.68000 560.37600 346.68000 558.07200 c
346.68000 555.91200 347.90400 553.82400 349.77600 552.45600 C
@c
269.28000 552.67200 m
238.60800 552.67200 L
240.19200 553.82400 241.27200 555.76800 241.27200 557.92800 c
241.27200 560.37600 240.12000 562.46400 238.17600 563.68800 C
269.78400 563.61600 L
267.91200 562.46400 266.61600 560.37600 266.61600 558.07200 c
266.61600 555.91200 267.69600 553.96800 269.28000 552.67200 C
@c
393.91200 561.67200 m
395.78400 561.67200 397.44000 560.01600 397.44000 558.07200 c
397.44000 556.12800 395.78400 554.54400 393.91200 554.54400 c
392.04000 554.54400 390.45600 556.12800 390.45600 558.07200 c
390.45600 560.01600 392.04000 561.67200 393.91200 561.67200 c
@c
353.88000 561.67200 m
355.75200 561.67200 357.40800 560.01600 357.40800 558.07200 c
357.40800 556.12800 355.75200 554.54400 353.88000 554.54400 c
352.00800 554.54400 350.42400 556.12800 350.42400 558.07200 c
350.42400 560.01600 352.00800 561.67200 353.88000 561.67200 c
@c
314.42400 561.67200 m
316.29600 561.67200 317.95200 560.01600 317.95200 558.07200 c
317.95200 556.12800 316.29600 554.54400 314.42400 554.54400 c
312.55200 554.54400 310.96800 556.12800 310.96800 558.07200 c
310.96800 560.01600 312.55200 561.67200 314.42400 561.67200 c
@c
273.81600 561.67200 m
275.68800 561.67200 277.34400 560.01600 277.34400 558.07200 c
277.34400 556.12800 275.68800 554.54400 273.81600 554.54400 c
271.94400 554.54400 270.36000 556.12800 270.36000 558.07200 c
270.36000 560.01600 271.94400 561.67200 273.81600 561.67200 c
@c
233.92800 561.52800 m
235.80000 561.52800 237.45600 559.87200 237.45600 557.92800 c
237.45600 555.98400 235.80000 554.40000 233.92800 554.40000 c
232.05600 554.40000 230.47200 555.98400 230.47200 557.92800 c
230.47200 559.87200 232.05600 561.52800 233.92800 561.52800 c
@c
313.77600 639.21600 m
311.32800 640.65600 311.61600 641.44800 310.68000 643.96800 C
313.05600 647.35200 L
314.06400 647.35200 L
316.94400 645.19200 L
315.79200 640.80000 L
313.77600 639.21600 L
@c
226.15200 617.90400 m
216.86400 622.65600 L
218.88000 637.12800 287.35200 651.02400 303.33600 652.10400 C
305.85600 644.90400 299.80800 637.05600 314.85600 631.51200 C
316.44000 633.09600 317.52000 633.45600 319.24800 634.46400 C
319.89600 633.74400 L
322.05600 638.06400 326.52000 647.56800 324.00000 651.67200 C
352.65600 653.40000 388.72800 642.38400 411.98400 625.60800 C
409.24800 623.23200 406.65600 621.21600 404.56800 618.19200 C
400.82400 619.12800 L
399.74400 622.22400 L
389.23200 624.16800 381.88800 640.44000 366.04800 633.74400 C
364.96800 626.04000 368.64000 626.76000 370.44000 621.14400 C
369.43200 621.00000 L
368.64000 620.13600 L
364.60800 621.79200 L
364.60800 625.82400 356.54400 631.72800 356.54400 634.03200 C
349.05600 637.77600 346.46400 641.59200 337.68000 641.59200 C
336.09600 639.79200 335.30400 638.35200 333.21600 637.05600 C
333.57600 628.84800 L
336.74400 628.27200 344.37600 619.92000 338.32800 618.76800 C
312.84000 626.18400 315.86400 628.41600 288.86400 617.90400 C
285.26400 621.00000 295.77600 634.53600 292.68000 639.00000 C
279.28800 645.76800 285.69600 641.95200 267.33600 629.20800 C
267.33600 626.97600 263.08800 621.79200 261.21600 619.92000 C
258.19200 621.14400 L
259.77600 624.74400 261.14400 628.56000 263.08800 631.80000 C
255.09600 642.45600 236.30400 627.69600 227.95200 619.34400 C
226.15200 617.90400 L
@c
219.09600 596.08800 m
210.38400 602.20800 201.60000 605.95200 195.40800 614.52000 C
201.09600 615.45600 208.00800 608.68800 214.56000 609.48000 C
218.08800 603.57600 223.34400 603.00000 219.09600 596.08800 C
@c
407.37600 595.00800 m
407.37600 596.80800 L
408.02400 599.40000 410.11200 607.46400 410.11200 609.48000 C
416.88000 611.56800 420.55200 608.83200 428.25600 613.29600 C
428.61600 612.86400 418.53600 597.96000 407.37600 595.00800 C
@c
286.12800 601.70400 m
282.24000 610.99200 302.61600 605.95200 312.48000 616.46400 C
334.00800 605.08800 339.33600 605.73600 339.33600 603.72000 c
339.33600 600.91200 327.45600 597.96000 328.96800 589.53600 C
332.06400 585.14400 333.00000 585.28800 336.81600 587.66400 C
338.54400 590.83200 337.39200 592.84800 336.52800 596.08800 C
344.88000 601.84800 L
362.30400 601.84800 350.56800 593.49600 354.96000 586.87200 C
356.68800 586.87200 L
367.70400 588.52800 363.45600 595.44000 360.50400 600.84000 C
362.08800 605.23200 366.84000 611.85600 371.59200 612.36000 C
390.60000 603.21600 375.19200 599.97600 381.24000 588.67200 C
389.88000 590.11200 380.88000 617.54400 396.86400 598.75200 C
396.36000 596.30400 396.36000 595.15200 396.36000 592.41600 C
398.66400 591.33600 L
397.94400 594.64800 401.32800 611.42400 409.10400 614.44800 C
421.41600 614.44800 425.01600 621.72000 434.95200 623.73600 C
444.02400 609.48000 418.24800 594.43200 408.96000 588.52800 C
407.59200 577.08000 410.11200 558.93600 408.88800 548.35200 C
219.81600 548.71200 L
218.66400 560.95200 219.02400 577.58400 218.37600 588.38400 C
214.34400 596.88000 181.36800 604.80000 193.39200 622.94400 C
195.76800 623.01600 202.39200 616.75200 213.33600 614.30400 C
222.33600 612.21600 228.24000 604.58400 226.58400 602.42400 C
223.34400 593.42400 223.70400 588.60000 229.89600 592.12800 C
228.52800 599.90400 L
231.55200 602.78400 232.63200 603.57600 236.73600 605.37600 C
246.60000 597.88800 240.48000 590.76000 245.80800 588.67200 C
252.72000 596.52000 237.24000 604.00800 255.24000 612.07200 C
276.19200 600.91200 258.04800 597.24000 268.84800 587.30400 C
274.17600 588.88800 265.89600 610.05600 283.60800 600.69600 C
286.92000 597.96000 289.80000 594.28800 289.58400 589.75200 C
292.10400 587.23200 292.24800 587.30400 295.84800 587.30400 C
302.18400 595.15200 296.78400 600.26400 286.12800 601.70400 C
@c
312.98400 621.43200 m
302.83200 617.90400 293.47200 611.20800 282.67200 614.66400 C
278.49600 626.40000 287.42400 627.04800 287.42400 634.46400 C
284.54400 635.18400 L
276.19200 626.90400 264.38400 608.40000 251.49600 617.18400 C
252.36000 622.22400 L
254.52000 628.12800 L
254.16000 628.84800 L
243.43200 625.96800 229.46400 607.39200 228.09600 611.56800 C
228.02400 611.78400 221.68800 618.04800 210.67200 621.00000 C
202.39200 623.16000 197.35200 629.78400 204.62400 631.51200 C
214.12800 629.13600 231.04800 641.01600 237.88800 647.13600 C
243.43200 648.14400 252.86400 648.79200 257.11200 653.04000 C
260.20800 652.96800 278.28000 655.12800 285.91200 657.07200 C
290.88000 661.89600 298.65600 655.77600 304.92000 658.29600 C
301.10400 666.57600 308.80800 676.51200 313.92000 676.94400 C
325.65600 674.85600 323.71200 657.14400 322.12800 658.51200 C
329.54400 655.56000 344.88000 656.28000 353.08800 656.28000 C
362.44800 652.60800 370.65600 652.53600 379.44000 647.35200 C
390.38400 649.94400 405.64800 631.80000 417.74400 631.80000 C
423.50400 635.11200 431.20800 625.10400 419.32800 621.64800 C
411.98400 620.42400 407.80800 618.40800 402.26400 613.22400 C
395.06400 609.26400 381.31200 626.54400 372.16800 629.20800 C
373.53600 625.39200 377.35200 619.84800 375.19200 615.60000 C
355.53600 611.20800 359.06400 631.36800 339.55200 636.04800 C
336.74400 631.44000 353.66400 614.52000 342.79200 613.08000 C
338.54400 609.62400 320.40000 620.20800 312.98400 621.43200 C
@c
361.15200 580.89600 m
364.10400 583.34400 367.56000 590.25600 369.72000 591.33600 C
368.64000 594.43200 368.78400 597.74400 367.20000 600.84000 C
369.64800 604.65600 369.43200 605.95200 374.11200 605.23200 C
379.22400 597.81600 374.11200 599.90400 374.11200 594.21600 C
374.97600 593.42400 L
374.40000 586.22400 384.40800 576.57600 387.57600 585.07200 C
388.80000 589.17600 388.51200 595.29600 391.32000 597.38400 C
392.47200 598.32000 394.92000 587.73600 395.56800 585.43200 C
401.25600 585.43200 402.48000 586.72800 403.63200 580.68000 C
361.15200 580.89600 L
@c
338.83200 580.24800 m
342.21600 589.46400 339.91200 600.33600 349.92000 595.94400 C
348.84000 590.61600 352.22400 584.49600 354.74400 580.03200 C
338.83200 580.24800 L
@c
299.01600 579.67200 m
301.89600 579.09600 306.72000 591.40800 299.66400 600.84000 C
289.22400 603.72000 309.74400 606.67200 313.34400 611.28000 C
314.71200 609.12000 339.12000 603.07200 326.95200 600.26400 C
324.21600 591.48000 322.84800 583.77600 329.11200 579.88800 C
299.01600 579.67200 L
@c
272.37600 579.96000 m
277.99200 588.96000 277.63200 586.65600 278.28000 596.80800 C
287.35200 600.55200 284.76000 586.22400 291.24000 579.67200 C
272.37600 579.96000 L
@c
226.15200 579.52800 m
224.92800 582.04800 L
224.42400 584.64000 L
225.57600 586.15200 L
240.62400 581.83200 230.97600 596.80800 235.94400 597.88800 C
241.63200 599.11200 240.84000 573.84000 250.41600 585.07200 C
252.00000 585.43200 L
253.44000 592.48800 254.23200 594.93600 251.35200 601.27200 C
254.59200 603.36000 252.86400 605.23200 257.83200 605.23200 C
260.20800 603.36000 261.00000 600.91200 261.21600 598.96800 C
258.69600 590.54400 259.70400 585.21600 266.25600 579.74400 C
226.15200 579.52800 L
@c
225.28800 569.30400 m
225.28800 571.60800 L
404.85600 571.53600 L
404.85600 569.30400 L
225.28800 569.30400 L
@c
313.77600 667.72800 m
315.00000 667.72800 316.08000 666.00000 316.08000 663.84000 c
316.08000 661.68000 315.00000 659.95200 313.77600 659.95200 c
312.55200 659.95200 311.54400 661.68000 311.54400 663.84000 c
311.54400 666.00000 312.55200 667.72800 313.77600 667.72800 c
@c
B

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel3Dict 3.0 0
%%EOF
